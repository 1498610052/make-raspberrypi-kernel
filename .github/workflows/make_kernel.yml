name: My Kernel

on:
  push:
    tags: 
      - 'v*'

env:
  USE_SSH_CONFIG: true # 是否使用ssh连接进行 true:使用 false:不使用

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: pull my Kernel linux
        run: |
          cd ../
          git clone https://github.com/1498610052/kernel_xiaomi_msm8998-1
      - name: pull RaspberryPi Kernel Tool
        run: |
          cd ../
          git clone https://github.com/1498610052/clang
          git clone https://github.com/1498610052/gcc
      - name: Move .config
        if: env.USE_SSH_CONFIG == 'false'
        run: |
          cp .config ../linux
      - name: Setup Debug Session # 用SSH连接Actions
        if: env.USE_SSH_CONFIG == 'true'
        uses: csexton/debugger-action@master
      - name: Make
        run: |
          cd kernel_xiaomi_msm8998-1/
make O=out ARCH=arm64 sagit_defconfig
make -j$(nproc --all) O=out \
                     ARCH=arm64 \
                     CC="ccache $HOME/clang/bin/clang" "$@" \
                     CROSS_COMPILE=/root/gcc/bin/aarch64-linux-gnu- \
                     CROSS_COMPILE_ARM32=$HOME/clang/bin/arm-linux-gnueabi- \
                     STRIP=/root/clang/bin/llvm-strip OBJDUMP=/root/clang/bin/llvm-objdump \
                     OBJCOPY=/root/clang/bin/llvm-objcopy NM=/root/clang/bin/llvm-nm AR=/root/clang/bin/llvm-ar 2>&1|tee kernel.log \
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
        with:
          tag_name: ${{ github.ref }} # (tag)标签名称
          release_name: Release ${{ github.ref }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布
      # 上传构建结果到 Release（把打包的tgz上传到Release）
      - name: build TAR PACKAGE
        run: |
          tar -czvf raspberrypi-kernel.tar.gz ../linux/arch/arm/boot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
          asset_path: ./raspberrypi-kernel.tar.gz # 要上传文件
          asset_name: raspberrypi-kernel.tar.gz # 上传后的文件名
          asset_content_type: application/gzip

